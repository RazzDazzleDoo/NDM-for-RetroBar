<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <system:Double x:Key="TaskbarHeight">30</system:Double>
    <system:Double x:Key="TaskbarRowHeight">30</system:Double>
    <system:Double x:Key="TaskbarUnlockedSize">4</system:Double>
    <Thickness x:Key="TaskButtonMargin" />
    <FontWeight x:Key="SetTimeMenuItemWeight">Normal</FontWeight>

    <LinearGradientBrush x:Key="TaskbarBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#F8FAFB"
                      Offset="0.01" />
        <GradientStop Color="#CCD7E0"
                      Offset="0.1" />
		<GradientStop Color="#BAC6D2"
                      Offset="0.2" />
        <GradientStop Color="#98A8B6"
                      Offset="0.5" />
        <GradientStop Color="#7E90A2"
                      Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskbarBackgroundTall"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#F8FAFB"
                      Offset="0.0" />
        <GradientStop Color="#CCD7E0"
                      Offset="0.05" />
		<GradientStop Color="#BAC6D2"
                      Offset="0.2" />
        <GradientStop Color="#98A8B6"
                      Offset="0.5" />
        <GradientStop Color="#7E90A2"
                      Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskbarVerticalBackground"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <GradientStop Color="#F8FAFB"
                      Offset="0.0" />
        <GradientStop Color="#CCD7E0"
                      Offset="0.05" />
		<GradientStop Color="#BAC6D2"
                      Offset="0.2" />
        <GradientStop Color="#98A8B6"
                      Offset="0.5" />
        <GradientStop Color="#7E90A2"
                      Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TaskbarBorder" Color="White" />

    <SolidColorBrush x:Key="TaskbarUnlockedBorderTop" Color="#3b72be" />
    <LinearGradientBrush x:Key="TaskbarUnlockedBottomBorder"
                         MappingMode="Absolute"
                         StartPoint="0,0"
                         EndPoint="0,3">
        <GradientStop Color="#368beb"
                      Offset="0.0" />
        <GradientStop Color="#307be5"
                      Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskbarUnlockedTopBorder"
                         StartPoint="0,1"
                         EndPoint="0,0.97">
        <GradientStop Color="#368beb"
                      Offset="0.0" />
        <GradientStop Color="#307be5"
                      Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskbarUnlockedLeftBorder"
                         StartPoint="1,0"
                         EndPoint="0.97,0">
        <GradientStop Color="#368beb"
                      Offset="0.0" />
        <GradientStop Color="#307be5"
                      Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskbarUnlockedRightBorder"
                         MappingMode="Absolute"
                         StartPoint="0,0"
                         EndPoint="3,0">
        <GradientStop Color="#368beb"
                      Offset="0.0" />
        <GradientStop Color="#307be5"
                      Offset="1.0" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TrayTopBorder" Color="#4B5C6E" />
	<SolidColorBrush x:Key="TrayBottomBorder" Color="#EAF1F8" />
    <SolidColorBrush x:Key="TrayLeftBorder" Color="#5C6F83" />
    <SolidColorBrush x:Key="TrayRightBorder" Color="#92A4B4" />
    <LinearGradientBrush x:Key="TrayBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#71899E"
                      Offset="0.0" />
        <GradientStop Color="#DAE7F2"
                      Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TrayVerticalBackground"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <GradientStop Color="#72879E"
                      Offset="0.0" />
        <GradientStop Color="#DAE7F2"
                      Offset="1.0" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TaskButtonTopBorder" Color="#6A7782" />
    <SolidColorBrush x:Key="TaskButtonLeftBorder" Color="#76838E" />
    <SolidColorBrush x:Key="TaskButtonRightBorder" Color="#F3F6F8" />
    <SolidColorBrush x:Key="TaskButtonBottomBorder" Color="#F4F7F8" />
    <LinearGradientBrush x:Key="TaskButtonBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#D6E0E8"
                      Offset="0.0" />
        <GradientStop Color="#8193A4"
                      Offset="1.0" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TaskButtonBackgroundHover"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#E3EAEF"
                      Offset="0.0" />
        <GradientStop Color="#A5B3C0"
                      Offset="1.0" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TaskButtonBackgroundPressed" Color="#36B3FE" />
	<SolidColorBrush x:Key="TaskButtonBackgroundActive" Color="#4AC1FF" />
	<SolidColorBrush x:Key="TaskButtonBackgroundPressedHover" Color="#73D5FF" />
	<LinearGradientBrush x:Key="TaskButtonBackgroundHighlightPressed"
                         StartPoint="0,0"
                         EndPoint="0.03,1">
        <GradientStop Color="#70aafa"
                      Offset="0.0" />
        <GradientStop Color="#003980f4"
                      Offset="0.3" />
    </LinearGradientBrush>
	
	<SolidColorBrush x:Key="TaskButtonTopBorderFlashing" Color="#6A7782" />
    <SolidColorBrush x:Key="TaskButtonLeftBorderFlashing" Color="#76838E" />
    <SolidColorBrush x:Key="TaskButtonRightBorderFlashing" Color="#F3F6F8" />
    <SolidColorBrush x:Key="TaskButtonBottomBorderFlashing" Color="#F4F7F8" />
    <LinearGradientBrush x:Key="TaskButtonBackgroundFlashing"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#AFC0D0"
                      Offset="0.0" />
        <GradientStop Color="#43566C"
                      Offset="1" />
    </LinearGradientBrush>
	
	<SolidColorBrush x:Key="TaskButtonInnerLeftBorder" Color="#162123" />
    <SolidColorBrush x:Key="TaskButtonInnerRightBorder" Color="#162123" />
    <SolidColorBrush x:Key="TaskButtonInnerBottomBorder" Color="#162123" />
	<SolidColorBrush x:Key="TaskButtonInnerTopBorder" Color="#162123" />

    <CornerRadius x:Key="TaskListScrollUpCornerRadius">0,0,2,2</CornerRadius>
    <CornerRadius x:Key="TaskListScrollDownCornerRadius">2,2,0,0</CornerRadius>
    <CornerRadius x:Key="TaskListScrollLeftCornerRadius">0,2,2,0</CornerRadius>
    <CornerRadius x:Key="TaskListScrollRightCornerRadius">2,0,0,2</CornerRadius>

    <SolidColorBrush x:Key="TaskListScrollButtonTopBorder" Color="#26000000" />
    <SolidColorBrush x:Key="TaskListScrollButtonLeftBorder" Color="#26ffffff" />
    <SolidColorBrush x:Key="TaskListScrollButtonRightBorder" Color="#26ffffff" />
    <SolidColorBrush x:Key="TaskListScrollButtonBottomBorder" Color="#26ffffff" />
    <SolidColorBrush x:Key="TaskListScrollButtonInnerTopBorder" Color="Transparent" />
    <SolidColorBrush x:Key="TaskListScrollButtonInnerLeftBorder" Color="#33000000" />
    <SolidColorBrush x:Key="TaskListScrollButtonInnerRightBorder" Color="#33000000" />
    <SolidColorBrush x:Key="TaskListScrollButtonInnerBottomBorder" Color="#33000000" />
    <SolidColorBrush x:Key="TaskListScrollButtonOuterLeftBorder" Color="#1f000000" />
    <SolidColorBrush x:Key="TaskListScrollButtonOuterRightBorder" Color="#55000000" />
    <SolidColorBrush x:Key="TaskListScrollButtonOuterBottomBorder" Color="#44000000" />
    <LinearGradientBrush x:Key="TaskListScrollButtonBackground"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <GradientStop Color="#26000000"
                      Offset="0.0" />
        <GradientStop Color="#33000000"
                      Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskListScrollButtonBackgroundHover"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <GradientStop Color="#5576FC"
                      Offset="0.0" />
        <GradientStop Color="#4A58E7"
                      Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskListScrollButtonBackgroundPressed"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <GradientStop Color="#272784"
                      Offset="0.0" />
        <GradientStop Color="#363CCA"
                      Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TaskListScrollDownButtonInnerTopBorder" Color="#33000000" />
    <SolidColorBrush x:Key="TaskListScrollDownButtonOuterTopBorder" Color="#44000000" />
    <SolidColorBrush x:Key="TaskListScrollDownButtonTopBorder" Color="#26ffffff" />
    <SolidColorBrush x:Key="TaskListScrollDownButtonInnerBottomBorder" Color="Transparent" />
    <SolidColorBrush x:Key="TaskListScrollDownButtonBottomBorder" Color="Transparent" />
    <SolidColorBrush x:Key="TaskListScrollArrow" Color="#bedcff" />

    <SolidColorBrush x:Key="ToolbarThumbForeground" Color="#082ea0" />
    <SolidColorBrush x:Key="ToolbarThumbBackground" Color="#128de6" />

    <DropShadowEffect x:Key="StartLabelShadow"
                      Color="#454c10"
                      Direction="315"
                      ShadowDepth="1"
                      BlurRadius="4"
                      Opacity="1" />
					  
	 <DropShadowEffect x:Key="TaskLabelShadow"
                      Color="#FFFFFF"
                      Direction="315"
                      ShadowDepth="1"
                      BlurRadius="0"
                      Opacity="1" />

    <SolidColorBrush x:Key="ItemButtonForeground" Color="#ffffff" />
    <SolidColorBrush x:Key="ButtonForeground" Color="#000000" />
    <SolidColorBrush x:Key="ButtonFlashingForeground" Color="#ffffff" />
    <SolidColorBrush x:Key="ClockForeground" Color="Black" />
    <SolidColorBrush x:Key="InputLanguageForeground" Color="#ffffff" />
    <SolidColorBrush x:Key="InputLanguageBackground" Color="#316ac5" />

    <SolidColorBrush x:Key="ToolTipBackground" Color="#FFFFE1" />
	<SolidColorBrush x:Key="ToolTipBackgroundPressed" Color="#162123" />
    <SolidColorBrush x:Key="ToolTipForeground" Color="#000000" />

    <SolidColorBrush x:Key="BalloonCloseButtonInactiveBackground" Color="#FFFFF5" />
    <SolidColorBrush x:Key="BalloonCloseButtonInactiveBorder" Color="#C7BEA6" />
    <SolidColorBrush x:Key="BalloonCloseButtonInactiveForeground" Color="#AA9C87" />
    <SolidColorBrush x:Key="BalloonCloseButtonInactiveShadow" Color="Transparent" />

    <SolidColorBrush x:Key="BalloonCloseButtonActiveBorder" Color="#FFFFFF" />
    <SolidColorBrush x:Key="BalloonCloseButtonActiveForeground" Color="#FFFFFF" />
    <SolidColorBrush x:Key="BalloonCloseButtonActiveShadowLight" Color="#F3F3D6" />
    <SolidColorBrush x:Key="BalloonCloseButtonActiveShadowDark" Color="#B8B8A2" />

    <SolidColorBrush x:Key="BalloonCloseButtonHoverInnerLight" Color="#11000000" />
    <SolidColorBrush x:Key="BalloonCloseButtonHoverInnerDark" Color="#33000000" />

    <RadialGradientBrush x:Key="BalloonCloseButtonHoverBackground"
                         GradientOrigin="1.0,1.0"
                         RadiusX="0.8"
                         RadiusY="0.8">
        <GradientStop Color="#ffde17"
                      Offset="0.0" />
        <GradientStop Color="#ffad31"
                      Offset="0.5" />
        <GradientStop Color="#ffad31"
                      Offset="0.6" />
        <GradientStop Color="#ffd9a1"
                      Offset="1.0" />
    </RadialGradientBrush>

    <SolidColorBrush x:Key="BalloonCloseButtonPressedInnerLight" Color="#08000000" />
    <SolidColorBrush x:Key="BalloonCloseButtonPressedInnerDark" Color="#33000000" />

    <RadialGradientBrush x:Key="BalloonCloseButtonPressedBackground"
                         GradientOrigin="1.0,1.0"
                         RadiusX="0.8"
                         RadiusY="0.8">
        <GradientStop Color="#d89500"
                      Offset="0.0" />
        <GradientStop Color="#cc7900"
                      Offset="0.5" />
        <GradientStop Color="#cc7900"
                      Offset="0.6" />
        <GradientStop Color="#a96000"
                      Offset="1.0" />
    </RadialGradientBrush>
	
	<SolidColorBrush x:Key="QuickLaunchButton" Color="#505961"/>
	<SolidColorBrush x:Key="QuickLaunchInner" Color="#4D5E6D"/>
	<LinearGradientBrush x:Key="QuickLaunchBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#C1CFDB"
                      Offset="0.0" />
        <GradientStop Color="#9AADBD"
                      Offset="1.0" />
    </LinearGradientBrush>

    <BitmapImage x:Key="StartIconImage"
                 UriSource="./Resources/startGCicon.png" />
    <BitmapImage x:Key="StartButtonImage"
                 UriSource="./Resources/GBASP/task-start.png" />
	<BitmapImage x:Key="TrayButton"
                 UriSource="./Resources/GBASP/trayarrow.png" />

    <Style TargetType="MenuItem"
           x:Key="TaskManMenuItem">
        <Setter Property="Header"
                Value="{DynamicResource show_taskman}" />
    </Style>

    <FontFamily x:Key="GlobalFontFamily">Tahoma Bold</FontFamily>


    <Style TargetType="ContentControl"
           x:Key="Taskbar"
           BasedOn="{StaticResource Taskbar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border BorderThickness="0"
                            BorderBrush="{DynamicResource TaskbarUnlockedBorderTop}"
                            x:Name="TaskbarUnlockedBorderTop">
                        <Border BorderThickness="0"
                                BorderBrush="{DynamicResource TaskbarUnlockedBottomBorder}"
                                x:Name="TaskbarUnlockedBorder">
                            <Border BorderThickness="0,1,0,0"
                                    BorderBrush="{DynamicResource TaskbarBorder}"
                                    Background="{DynamicResource TaskbarBackgroundTall}"
                                    x:Name="TaskbarBorder">
                                <ContentPresenter Margin="0,-1,0,0"
                                                  Name="Content" />
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="TaskbarBorder"
                                        Property="Background"
                                        Value="{DynamicResource TaskbarVerticalBackground}" />
                                <Setter TargetName="TaskbarBorder"
                                        Property="BorderThickness"
                                        Value="0" />
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                           Value="Horizontal"/>
                                <Condition Binding="{Binding Path=Rows, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                           Value="1"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="TaskbarBorder"
                                        Property="Background"
                                        Value="{DynamicResource TaskbarBackground}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=AppBarMode, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="AutoHide" />
                                <Condition Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="TaskbarUnlockedBorderTop"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderThickness"
                                        Value="0,3,0,0" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=AppBarMode, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="AutoHide" />
                                <Condition Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="TaskbarUnlockedBorderTop"
                                        Property="BorderThickness"
                                        Value="0,0,0,1" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,3" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderBrush"
                                        Value="{DynamicResource TaskbarUnlockedTopBorder}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=AppBarMode, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="AutoHide" />
                                <Condition Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="TaskbarUnlockedBorderTop"
                                        Property="BorderThickness"
                                        Value="1,0,0,0" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderThickness"
                                        Value="3,0,0,0" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderBrush"
                                        Value="{DynamicResource TaskbarUnlockedRightBorder}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=AppBarMode, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="AutoHide" />
                                <Condition Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Right" />
                                <Condition Binding="{Binding Path=FlowDirection, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="RightToLeft" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="TaskbarUnlockedBorderTop"
                                        Property="BorderThickness"
                                        Value="0,0,1,0" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderThickness"
                                        Value="0,0,3,0" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderBrush"
                                        Value="{DynamicResource TaskbarUnlockedLeftBorder}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=AppBarMode, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="AutoHide" />
                                <Condition Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="TaskbarUnlockedBorderTop"
                                        Property="BorderThickness"
                                        Value="0,0,1,0" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderThickness"
                                        Value="0,0,3,0" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderBrush"
                                        Value="{DynamicResource TaskbarUnlockedLeftBorder}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=AppBarMode, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="AutoHide" />
                                <Condition Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Left" />
                                <Condition Binding="{Binding Path=FlowDirection, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="RightToLeft" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="TaskbarUnlockedBorderTop"
                                        Property="BorderThickness"
                                        Value="1,0,0,0" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderThickness"
                                        Value="3,0,0,0" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderBrush"
                                        Value="{DynamicResource TaskbarUnlockedRightBorder}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsLocked, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="False" />
                                <Condition Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="TaskbarUnlockedBorderTop"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderThickness"
                                        Value="0,3,0,0" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsLocked, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="False" />
                                <Condition Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="TaskbarUnlockedBorderTop"
                                        Property="BorderThickness"
                                        Value="0,0,0,1" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,3" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderBrush"
                                        Value="{DynamicResource TaskbarUnlockedTopBorder}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsLocked, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="False" />
                                <Condition Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="TaskbarUnlockedBorderTop"
                                        Property="BorderThickness"
                                        Value="1,0,0,0" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderThickness"
                                        Value="3,0,0,0" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderBrush"
                                        Value="{DynamicResource TaskbarUnlockedRightBorder}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsLocked, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="False" />
                                <Condition Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Right" />
                                <Condition Binding="{Binding Path=FlowDirection, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="RightToLeft" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="TaskbarUnlockedBorderTop"
                                        Property="BorderThickness"
                                        Value="0,0,1,0" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderThickness"
                                        Value="0,0,3,0" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderBrush"
                                        Value="{DynamicResource TaskbarUnlockedLeftBorder}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsLocked, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="False" />
                                <Condition Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="TaskbarUnlockedBorderTop"
                                        Property="BorderThickness"
                                        Value="0,0,1,0" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderThickness"
                                        Value="0,0,3,0" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderBrush"
                                        Value="{DynamicResource TaskbarUnlockedLeftBorder}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsLocked, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="False" />
                                <Condition Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Left" />
                                <Condition Binding="{Binding Path=FlowDirection, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="RightToLeft" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="TaskbarUnlockedBorderTop"
                                        Property="BorderThickness"
                                        Value="1,0,0,0" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderThickness"
                                        Value="3,0,0,0" />
                                <Setter TargetName="TaskbarUnlockedBorder"
                                        Property="BorderBrush"
                                        Value="{DynamicResource TaskbarUnlockedRightBorder}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="TaskLabel" TargetType="TextBlock">
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect Color="White"
								  BlurRadius="0"
								  ShadowDepth="2"
								  Opacity="1" />
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="ClockTip" TargetType="TextBlock">
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect Color="White"
								  BlurRadius="0"
								  ShadowDepth="2"
								  Opacity="1" />
			</Setter.Value>
		</Setter>
	</Style>

	
	<Style TargetType="Button"
           x:Key="TaskButton"
           BasedOn="{StaticResource TaskButton}">
        <Setter Property="Margin"
                Value="{DynamicResource TaskButtonMargin}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent"
                            Padding="0,3,2,2"
                            Name="ButtonBorder">
                        <Border BorderThickness="0,2,0,0"
                                BorderBrush="{DynamicResource TaskButtonTopBorder}"
                                Background="Transparent"
                                CornerRadius="3"
                                x:Name="ButtonTopBorder">
                            <Border BorderThickness="2,0,0,0"
                                    BorderBrush="{DynamicResource TaskButtonLeftBorder}"
                                    CornerRadius="3"
                                    x:Name="ButtonLeftBorder">
                                <Border BorderThickness="0,0,0,2"
                                        BorderBrush="{DynamicResource TaskButtonBottomBorder}"
                                        CornerRadius="3"
                                        x:Name="ButtonBottomBorder">
                                    <Border BorderThickness="0,0,2,0"
                                            BorderBrush="{DynamicResource TaskButtonRightBorder}"
                                            CornerRadius="3"
                                            x:Name="ButtonRightBorder">
											<Border BorderThickness="0,0"
													BorderBrush="{DynamicResource TaskButtonInnerTopBorder}"
													x:Name="ButtonInnerTopBorder">
												<Border BorderThickness="0,0"
														BorderBrush="{DynamicResource TaskButtonInnerLeftBorder}"
														x:Name="ButtonInnerLeftBorder">
													<Border BorderThickness="0,0"
															BorderBrush="{DynamicResource TaskButtonInnerRightBorder}"
															x:Name="ButtonInnerRightBorder">
														<Border BorderThickness="0,0"
																BorderBrush="{DynamicResource TaskButtonInnerBottomBorder}"
																x:Name="ButtonInnerBottomBorder">
																	<ContentPresenter Margin="8,3"
																					  x:Name="Content" />
														</Border>
													</Border>
												</Border>
											</Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="False" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="8,6,8,5" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="-18,1,2,-1" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="Padding"
                                        Value="1,0,1,0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource ButtonForeground}" />
                            <Setter TargetName="ButtonTopBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonTopBorder}" />
                            <Setter TargetName="ButtonLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonLeftBorder}" />
                            <Setter TargetName="ButtonRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonRightBorder}" />
                            <Setter TargetName="ButtonBottomBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonBottomBorder}" />
							<Setter TargetName="ButtonInnerTopBorder"
                                    Property="BorderThickness"
                                    Value="0,2,0,0" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="BorderThickness"
                                    Value="25,0,0,0" />
							<Setter TargetName="ButtonInnerBottomBorder"
                                    Property="BorderThickness"
                                    Value="0,0,0,2" />
							<Setter TargetName="ButtonInnerRightBorder"
                                    Property="BorderThickness"
                                    Value="0,0,5,0" />
                            <Setter TargetName="ButtonInnerTopBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundPressed}" />
							<Setter TargetName="Content"
                                        Property="Margin"
                                        Value="-18,1,2,-1" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Horizontal" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="9,2,4,2" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style TargetType="Button"
           x:Key="TaskButtonActive"
           BasedOn="{StaticResource TaskButton}">
        <Setter Property="Foreground"
                Value="{DynamicResource ButtonForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent"
                            Padding="0,3,0,2"
                            Name="ButtonBorder">
                        <Border BorderThickness="0,2,0,0"
                                BorderBrush="{DynamicResource TaskButtonTopBorder}"
                                Background="{DynamicResource TaskButtonBackgroundActive}"
                                CornerRadius="3"
                                x:Name="ButtonTopBorder">
                            <Border BorderThickness="2,0,0,0"
                                    BorderBrush="{DynamicResource TaskButtonLeftBorder}"
                                    CornerRadius="3"
                                    x:Name="ButtonLeftBorder">
                                <Border BorderThickness="0,0,0,2"
                                        BorderBrush="{DynamicResource TaskButtonBottomBorder}"
                                        CornerRadius="3"
                                        x:Name="ButtonBottomBorder">
                                    <Border BorderThickness="0,0,2,0"
                                            BorderBrush="{DynamicResource TaskButtonRightBorder}"
                                            CornerRadius="3"
                                            x:Name="ButtonRightBorder">
                                                    <Border BorderThickness="27,0,0,0"
                                                BorderBrush="{DynamicResource TaskButtonInnerLeftBorder}"
												Background="{DynamicResource TaskButtonBackgroundHighlightPressed}"
                                                x:Name="ButtonInnerLeftBorder">
                                            <Border BorderThickness="0,0,5,0"
                                                    BorderBrush="{DynamicResource TaskButtonInnerRightBorder}"
                                                    x:Name="ButtonInnerRightBorder">
                                                <Border BorderThickness="0,0,0,3"
                                                        BorderBrush="{DynamicResource TaskButtonInnerBottomBorder}"
                                                        x:Name="ButtonInnerBottomBorder">
															<Border BorderThickness="0,3,0,0"
															BorderBrush="{DynamicResource TaskButtonInnerTopBorder}"
															x:Name="ButtonInnerTopBorder">
																	<ContentPresenter Margin="-18,1,2,-1"
																	x:Name="Content" />
															</Border>
                                                </Border>
                                            </Border>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="Padding"
                                        Value="1,0,1,0" />
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="-18,1,2,-1" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonTopBorderPressed}" />
                            <Setter TargetName="ButtonTopBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundPressedHover}" />
                            <Setter TargetName="ButtonLeftBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundHighlightPressed}" />
                        </Trigger>
						<Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonTopBorderPressed}" />
                            <Setter TargetName="ButtonTopBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundPressed}" />
                            <Setter TargetName="ButtonLeftBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundHighlightPressed}" />
							<Setter TargetName="Content"
                                        Property="Margin"
                                        Value="-18,1,2,-1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style TargetType="Button"
           x:Key="TaskButtonFlashing"
           BasedOn="{StaticResource TaskButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent"
                            Padding="0,3,0,2"
                            Name="ButtonBorder">
                        <Border BorderThickness="0,1,0,0"
                                BorderBrush="{DynamicResource TaskButtonTopBorderFlashing}"
                                CornerRadius="2"
                                x:Name="ButtonTopBorder">
                            <Border BorderThickness="1,0,0,0"
                                    BorderBrush="{DynamicResource TaskButtonLeftBorderFlashing}"
                                    CornerRadius="2"
                                    x:Name="ButtonLeftBorder">
                                <Border BorderThickness="0,0,0,1"
                                        BorderBrush="{DynamicResource TaskButtonBottomBorderFlashing}"
                                        CornerRadius="2"
                                        x:Name="ButtonBottomBorder">
                                    <Border BorderThickness="0,0,1,0"
                                            BorderBrush="{DynamicResource TaskButtonRightBorderFlashing}"
                                            CornerRadius="2"
                                            x:Name="ButtonRightBorder">
                                        <Border BorderThickness="1,0,0,0"
                                                BorderBrush="{DynamicResource TaskButtonInnerLeftBorderFlashing}"
                                                Background="{DynamicResource TaskButtonBackgroundFlashing}"
                                                CornerRadius="2"
                                                x:Name="ButtonInnerLeftBorder">
                                            <Border BorderThickness="0,0,1,1"
                                                    BorderBrush="{DynamicResource TaskButtonBottomRightBorderFlashing}"
                                                    CornerRadius="2"
                                                    x:Name="ButtonBottomRightBorder">
                                                <ContentPresenter Margin="8,3"
                                                                  x:Name="Content" />
                                            </Border>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="False" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="8,6,8,5" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="9,7,7,4" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource ButtonPressedForeground}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="Padding"
                                        Value="1,0,1,0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Horizontal" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="9,4,7,2" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource ButtonPressedForeground}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GroupBox"
           x:Key="Tray">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Margin"
                Value="20,1,4,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Border BorderThickness="0,2,0,0"
                            BorderBrush="{DynamicResource TrayTopBorder}"
							CornerRadius="3"
                            Name="TrayTopBorder">
                        <Border BorderThickness="2,0,0,0"
                                BorderBrush="{DynamicResource TrayLeftBorder}"
                                Background="{DynamicResource TrayBackground}"
                                Name="TrayLeftBorder">
                            <Border BorderThickness="0,2,0,0"
                                    BorderBrush="{DynamicResource TrayRightBorder}"
                                    Name="TrayRightBorder">
								<Border BorderThickness="0,0,0,2"
                                    BorderBrush="{DynamicResource TrayBottomBorder}"
									CornerRadius="3"
                                    Name="TrayBottomBorder">
                                        <ContentPresenter Margin="0,0,6,0"
                                                          Name="Content" />
								</Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="TrayTopBorder"
                                        Property="BorderThickness"
                                        Value="0,2,0,0" />
                                <Setter TargetName="TrayLeftBorder"
                                        Property="BorderThickness"
                                        Value="2,0,0,0" />
                                <Setter TargetName="TrayRightBorder"
                                        Property="BorderThickness"
                                        Value="0,0,2,0" />
								<Setter TargetName="TrayBottomBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,2" />
                                <Setter TargetName="TrayLeftBorder"
                                        Property="Background"
                                        Value="{DynamicResource TrayVerticalBackground}" />
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="0,0,0,6" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0,10,0,0" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ContentControl"
           x:Key="TaskButtonThumbnail">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border BorderThickness="1"
                            CornerRadius="4"
                            BorderBrush="{DynamicResource ToolTipForeground}"
                            Background="{DynamicResource ToolTipBackground}"
                            Padding="4"
                            Margin="4">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TaskListScrollUpButton"
           TargetType="RepeatButton"
           BasedOn="{StaticResource TaskListScrollButton}">
        <Setter Property="Margin"
                Value="0,1,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border BorderThickness="1,0,0,0"
                            BorderBrush="{DynamicResource TaskListScrollButtonOuterLeftBorder}"
                            CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                            x:Name="ButtonOuterLeftBorder">
                        <Border BorderThickness="0,0,1,0"
                                BorderBrush="{DynamicResource TaskListScrollButtonOuterRightBorder}"
                                CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                                x:Name="ButtonOuterRightBorder">
                            <Border BorderThickness="0,0,0,1"
                                    BorderBrush="{DynamicResource TaskListScrollButtonOuterBottomBorder}"
                                    CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                                    x:Name="ButtonOuterBottomBorder">
                                <Border BorderThickness="0,0,0,1"
                                        BorderBrush="{DynamicResource TaskListScrollButtonBottomBorder}"
                                        CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                                        x:Name="ButtonBottomBorder">
                                    <Border BorderThickness="1,0,0,0"
                                            BorderBrush="{DynamicResource TaskListScrollButtonLeftBorder}"
                                            CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                                            x:Name="ButtonLeftBorder">
                                        <Border BorderThickness="0,0,1,0"
                                                BorderBrush="{DynamicResource TaskListScrollButtonRightBorder}"
                                                CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                                                x:Name="ButtonRightBorder">
                                            <Border BorderThickness="0,1,0,0"
                                                    BorderBrush="{DynamicResource TaskListScrollButtonTopBorder}"
                                                    Background="{DynamicResource TaskListScrollButtonBackground}"
                                                    CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                                                    x:Name="ButtonTopBorder">
                                                <Border BorderThickness="0,0,0,1"
                                                        BorderBrush="{DynamicResource TaskListScrollButtonInnerBottomBorder}"
                                                        CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                                                        x:Name="ButtonInnerBottomBorder">
                                                    <Border BorderThickness="1,0,0,0"
                                                            BorderBrush="{DynamicResource TaskListScrollButtonInnerLeftBorder}"
                                                            CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                                                            x:Name="ButtonInnerLeftBorder">
                                                        <Border BorderThickness="0,0,1,0"
                                                                BorderBrush="{DynamicResource TaskListScrollButtonInnerRightBorder}"
                                                                CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                                                                x:Name="ButtonInnerRightBorder">
                                                            <ContentPresenter HorizontalAlignment="Center"
                                                                              VerticalAlignment="Center"
                                                                              Margin="1,-3,1,-3"
                                                                              x:Name="Content" />
                                                        </Border>
                                                    </Border>
                                                </Border>
                                            </Border>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskListScrollButtonBackgroundHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskListScrollButtonBackgroundPressed}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonLeftBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,1" />
                                <Setter TargetName="ButtonTopBorder"
                                        Property="BorderThickness"
                                        Value="1,0,0,0" />
                                <Setter TargetName="ButtonRightBorder"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="ButtonBottomBorder"
                                        Property="BorderThickness"
                                        Value="0,0,1,0" />
                                <Setter TargetName="ButtonInnerLeftBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,1" />
                                <Setter TargetName="ButtonInnerRightBorder"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="ButtonInnerBottomBorder"
                                        Property="BorderThickness"
                                        Value="0,0,1,0" />
                                <Setter TargetName="ButtonOuterLeftBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,1" />
                                <Setter TargetName="ButtonOuterRightBorder"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="ButtonOuterBottomBorder"
                                        Property="BorderThickness"
                                        Value="0,0,1,0" />
                                <Setter TargetName="ButtonLeftBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                                <Setter TargetName="ButtonTopBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                                <Setter TargetName="ButtonRightBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                                <Setter TargetName="ButtonBottomBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                                <Setter TargetName="ButtonInnerLeftBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                                <Setter TargetName="ButtonInnerRightBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                                <Setter TargetName="ButtonInnerBottomBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                                <Setter TargetName="ButtonOuterLeftBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                                <Setter TargetName="ButtonOuterRightBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                                <Setter TargetName="ButtonOuterBottomBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TaskListScrollDownButton"
           TargetType="RepeatButton"
           BasedOn="{StaticResource TaskListScrollButton}">
        <Setter Property="Margin"
                Value="0,-1,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border BorderThickness="1,0,0,0"
                            BorderBrush="{DynamicResource TaskListScrollButtonOuterLeftBorder}"
                            CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                            x:Name="ButtonOuterLeftBorder">
                        <Border BorderThickness="0,0,1,0"
                                BorderBrush="{DynamicResource TaskListScrollButtonOuterRightBorder}"
                                CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                x:Name="ButtonOuterRightBorder">
                            <Border BorderThickness="0,1,0,0"
                                    BorderBrush="{DynamicResource TaskListScrollDownButtonOuterTopBorder}"
                                    CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                    x:Name="ButtonOuterTopBorder">
                                <Border BorderThickness="0,0,0,1"
                                        BorderBrush="{DynamicResource TaskListScrollDownButtonBottomBorder}"
                                        CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                        x:Name="ButtonBottomBorder">
                                    <Border BorderThickness="1,0,0,0"
                                            BorderBrush="{DynamicResource TaskListScrollButtonLeftBorder}"
                                            CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                            x:Name="ButtonLeftBorder">
                                        <Border BorderThickness="0,0,1,0"
                                                BorderBrush="{DynamicResource TaskListScrollButtonRightBorder}"
                                                CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                                x:Name="ButtonRightBorder">
                                            <Border BorderThickness="0,1,0,0"
                                                    BorderBrush="{DynamicResource TaskListScrollDownButtonTopBorder}"
                                                    CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                                    x:Name="ButtonTopBorder">
                                                <Border BorderThickness="0,0,0,1"
                                                        BorderBrush="{DynamicResource TaskListScrollDownButtonInnerBottomBorder}"
                                                        Background="{DynamicResource TaskListScrollButtonBackground}"
                                                        CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                                        x:Name="ButtonInnerBottomBorder">
                                                    <Border BorderThickness="1,0,0,0"
                                                            BorderBrush="{DynamicResource TaskListScrollButtonInnerLeftBorder}"
                                                            CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                                            x:Name="ButtonInnerLeftBorder">
                                                        <Border BorderThickness="0,0,1,0"
                                                                BorderBrush="{DynamicResource TaskListScrollButtonInnerRightBorder}"
                                                                CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                                                x:Name="ButtonInnerRightBorder">
                                                            <Border BorderThickness="0,1,0,0"
                                                                    BorderBrush="{DynamicResource TaskListScrollDownButtonInnerTopBorder}"
                                                                    CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                                                    x:Name="ButtonInnerTopBorder">
                                                                <ContentPresenter HorizontalAlignment="Center"
                                                                              VerticalAlignment="Center"
                                                                              Margin="1,-4,1,-3"
                                                                              x:Name="Content" />
                                                            </Border>
                                                        </Border>
                                                    </Border>
                                                </Border>
                                            </Border>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonInnerBottomBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskListScrollButtonBackgroundHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonInnerBottomBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskListScrollButtonBackgroundPressed}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="1,-3,1,-3" />
                                <Setter TargetName="ButtonLeftBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,1" />
                                <Setter TargetName="ButtonTopBorder"
                                        Property="BorderThickness"
                                        Value="1,0,0,0" />
                                <Setter TargetName="ButtonRightBorder"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="ButtonBottomBorder"
                                        Property="BorderThickness"
                                        Value="0,0,1,0" />
                                <Setter TargetName="ButtonInnerLeftBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,1" />
                                <Setter TargetName="ButtonInnerRightBorder"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="ButtonInnerBottomBorder"
                                        Property="BorderThickness"
                                        Value="0,0,1,0" />
                                <Setter TargetName="ButtonInnerTopBorder"
                                        Property="BorderThickness"
                                        Value="1,0,0,0" />
                                <Setter TargetName="ButtonOuterLeftBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,1" />
                                <Setter TargetName="ButtonOuterRightBorder"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="ButtonOuterTopBorder"
                                        Property="BorderThickness"
                                        Value="1,0,0,0" />
                                <Setter TargetName="ButtonLeftBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonTopBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonRightBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonBottomBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonInnerLeftBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonInnerRightBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonInnerBottomBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonInnerTopBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonOuterLeftBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonOuterRightBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonOuterTopBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ToolTip x:Key="StartButtonTip" Content="{DynamicResource start_button_tip}" />

    <Style TargetType="ToggleButton"
           x:Key="StartButton">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Foreground"
                Value="{DynamicResource ItemButtonForeground}" />
        <Setter Property="Margin"
                Value="0,3,0,-4" />
        <Setter Property="MinWidth"
                Value="100" />
        <Setter Property="Height"
                Value="36" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="StartButtonBorder" HorizontalAlignment="Left">
                        <Border.Background>
                            <ImageBrush ImageSource="{DynamicResource StartButtonImage}"
                                        ViewboxUnits="RelativeToBoundingBox"
                                        Viewbox="0,0,0.20,1" />
                        </Border.Background>
                        <ContentPresenter Margin="0,-3,0,0" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="StartButtonBorder"
                                    Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{DynamicResource StartButtonImage}"
                                                ViewboxUnits="RelativeToBoundingBox"
                                                Viewbox="0.60,0,0.20,1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="StartButtonBorder"
                                    Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{DynamicResource StartButtonImage}"
                                                ViewboxUnits="RelativeToBoundingBox"
                                                Viewbox="0.40,0,0.20,1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="StartButtonBorder"
                                    Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{DynamicResource StartButtonImage}"
                                                ViewboxUnits="RelativeToBoundingBox"
                                                Viewbox="0.20,0,0.20,1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Image"
           x:Key="TaskIcon"
           BasedOn="{StaticResource TaskIcon}">
        <Setter Property="Margin"
                Value="0,0,4,0" />
    </Style>

    <Style TargetType="Image"
           x:Key="TaskOverlayIcon"
           BasedOn="{StaticResource TaskOverlayIcon}">
        <Setter Property="Margin"
                Value="0,0,3,-1" />
    </Style>

    <Style TargetType="Image"
           x:Key="StartIcon"
           BasedOn="{StaticResource StartIcon}">
        <Setter Property="Margin"
                Value="10,0,0,0" />
        <Setter Property="Width"
                Value="25" />
        <Setter Property="Height"
                Value="20" />
    </Style>

    <Style TargetType="TextBlock"
           x:Key="StartLabel"
           BasedOn="{StaticResource StartLabel}">
        <Setter Property="Text"
                Value="           " />
        <Setter Property="FontFamily"
                Value="{DynamicResource start_text_xp_font_family}" />
        <Setter Property="FontSize"
                Value="19" />
        <Setter Property="FontStyle"
                Value="Italic" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="Margin"
                Value="0,0,26,0" />
        <Setter Property="Effect"
                Value="{DynamicResource StartLabelShadow}" />
        <Setter Property="TextOptions.TextRenderingMode"
                Value="Grayscale" />
    </Style>

    <Style TargetType="TextBlock"
           x:Key="Clock"
           BasedOn="{StaticResource Clock}">
        <Setter Property="Margin"
                Value="8,1,11,6" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0,1,0,6" />
                </DataTrigger.Setters>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                               Value="Horizontal"/>
                    <Condition Binding="{Binding Path=Rows, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                               Value="1"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="8,-1,11,0" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate TargetType="{x:Type UserControl}"
                     x:Key="ClockTemplateKey">
        <StackPanel Orientation="Vertical">
            <TextBlock Text="{Binding Path=Now, StringFormat=t, Mode=OneWay}"
                       Style="{DynamicResource Clock}"
                       Name="ClockText">
            </TextBlock>
            <TextBlock Text="{Binding Path=Now, StringFormat=dddd, Mode=OneWay}"
                       Style="{DynamicResource Clock}"
                       Margin="8,0,11,6"
                       Name="ClockVerticalDayOfWeek"
                       Visibility="Visible">
            </TextBlock>
            <TextBlock Text="{Binding Path=Now, StringFormat=d, Mode=OneWay}"
                       Style="{DynamicResource Clock}"
                       Margin="8,0,11,3"
                       Name="ClockVerticalDate"
                       Visibility="Visible">
            </TextBlock>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter TargetName="ClockVerticalDayOfWeek"
                            Property="Margin"
                            Value="0,0,0,6" />
                    <Setter TargetName="ClockVerticalDate"
                            Property="Margin"
                            Value="0,0,0,3" />
                </DataTrigger.Setters>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Horizontal"/>
                    <Condition Binding="{Binding Path=Rows, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                               Value="1"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="ClockVerticalDayOfWeek"
                            Property="Visibility"
                            Value="Collapsed" />
                    <Setter TargetName="ClockVerticalDate"
                            Property="Visibility"
                            Value="Collapsed" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Image"
           x:Key="NotifyIcon"
           BasedOn="{StaticResource NotifyIcon}">
        <Setter Property="Margin"
                Value="0,1,2,1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="1,2,1,2" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ItemsControl"
           x:Key="NotifyIconItems"
           BasedOn="{StaticResource NotifyIconItems}">
        <Setter Property="Margin"
                Value="0,-1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>
	
	<Style TargetType="ItemsControl"
           x:Key="ToolbarItems"
           BasedOn="{StaticResource ToolbarItems}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0,3,0,4" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button"
           x:Key="ToolbarButton"
           BasedOn="{StaticResource ToolbarButton}">
		<Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <Border BorderThickness="0,1,0,0"
                                BorderBrush="{DynamicResource QuickLaunchButton}"
                                Background="{DynamicResource QuickLaunchBackground}"
                                CornerRadius="4"
								Margin="0,3,2,4"
                                x:Name="ButtonTopBorder">
                            <Border BorderThickness="1,0,0,0"
                                    BorderBrush="{DynamicResource QuickLaunchButton}"
                                    CornerRadius="4"
                                    x:Name="ButtonLeftBorder">
                                <Border BorderThickness="0,0,0,1"
                                        BorderBrush="{DynamicResource QuickLaunchButton}"
                                        CornerRadius="4"
                                        x:Name="ButtonBottomBorder">
                                    <Border BorderThickness="0,0,1,0"
                                            BorderBrush="{DynamicResource QuickLaunchButton}"
                                            CornerRadius="4"
                                            x:Name="ButtonRightBorder">
											<Border BorderThickness="1,0,0,0"
													BorderBrush="{DynamicResource TaskButtonBottomBorder}"
													CornerRadius="4"
													x:Name="ButtonInnerLeftBorder">
												<Border BorderThickness="0,1,0,0"
														BorderBrush="{DynamicResource TaskButtonBottomBorder}"
														CornerRadius="4"
														x:Name="ButtonInnerTopBorder">
													<Border BorderThickness="0,0,1,0"
															BorderBrush="{DynamicResource QuickLaunchInner}"
															CornerRadius="4"
															x:Name="ButtonInnerRightBorder">
														<Border BorderThickness="0,0,0,1"
																BorderBrush="{DynamicResource QuickLaunchInner}"
																CornerRadius="4"
																x:Name="ButtonInnerBottomBorder">
															<ContentPresenter Margin="1,2"
																		x:Name="Content" />
														</Border>
													</Border>
												</Border>
											</Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
    <Style TargetType="ToggleButton"
           x:Key="ShowDesktopButton">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderThickness="1,0,0,0"
                            BorderBrush="{DynamicResource TaskListScrollButtonOuterLeftBorder}"
                            x:Name="ButtonOuterLeftBorder">
                        <Border BorderThickness="0,0,0,0"
                                BorderBrush="{DynamicResource TaskListScrollButtonOuterRightBorder}"
                                x:Name="ButtonOuterRightBorder">
                            <Border BorderThickness="0,0,0,0"
                                    BorderBrush="{DynamicResource TaskListScrollButtonOuterBottomBorder}"
                                    x:Name="ButtonOuterBottomBorder">
                                <Border BorderThickness="0,0,0,0"
                                        BorderBrush="{DynamicResource TaskListScrollButtonBottomBorder}"
                                        x:Name="ButtonBottomBorder">
                                    <Border BorderThickness="1,0,0,0"
                                            BorderBrush="{DynamicResource TaskListScrollButtonLeftBorder}"
                                            x:Name="ButtonLeftBorder">
                                        <Border BorderThickness="0,0,0,0"
                                                BorderBrush="{DynamicResource TaskListScrollButtonRightBorder}"
                                                x:Name="ButtonRightBorder">
                                            <Border BorderThickness="0,1,0,0"
                                                    BorderBrush="{DynamicResource TaskListScrollButtonTopBorder}"
                                                    Background="{DynamicResource TaskListScrollButtonBackground}"
                                                    x:Name="ButtonTopBorder">
                                                <Border BorderThickness="0,0,0,1"
                                                        BorderBrush="{DynamicResource TaskListScrollButtonInnerBottomBorder}"
                                                        x:Name="ButtonInnerBottomBorder">
                                                    <Border BorderThickness="1,0,0,0"
                                                            BorderBrush="{DynamicResource TaskListScrollButtonInnerLeftBorder}"
                                                            x:Name="ButtonInnerLeftBorder">
                                                        <Border BorderThickness="0,0,1,0"
                                                                BorderBrush="{DynamicResource TaskListScrollButtonInnerRightBorder}"
                                                                x:Name="ButtonInnerRightBorder">
                                                            <ContentPresenter HorizontalAlignment="Center"
                                                                              VerticalAlignment="Center"
                                                                              Margin="5,1,3,0"
                                                                              x:Name="Content" />
                                                        </Border>
                                                    </Border>
                                                </Border>
                                            </Border>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskListScrollButtonBackgroundHover}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskListScrollButtonBackgroundPressed}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskListScrollButtonBackgroundPressed}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonLeftBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,0" />
                                <Setter TargetName="ButtonTopBorder"
                                        Property="BorderThickness"
                                        Value="1,0,0,0" />
                                <Setter TargetName="ButtonRightBorder"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="ButtonBottomBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,0" />
                                <Setter TargetName="ButtonInnerLeftBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,1" />
                                <Setter TargetName="ButtonInnerRightBorder"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="ButtonInnerBottomBorder"
                                        Property="BorderThickness"
                                        Value="0,0,1,0" />
                                <Setter TargetName="ButtonOuterLeftBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,0" />
                                <Setter TargetName="ButtonOuterRightBorder"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="ButtonOuterBottomBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TaskListScrollButtonGrid"
           TargetType="Grid">
        <Setter Property="Margin"
                Value="1,0" />
    </Style>

    <Style x:Key="TaskListScrollViewer"
           TargetType="ScrollViewer"
           BasedOn="{StaticResource TaskListScrollViewer}">
        <Setter Property="Margin"
                Value="4,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ScrollContentPresenter Grid.Column="0"
                                                Width="{TemplateBinding Width}"
                                                Height="{TemplateBinding Height}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                Content="{TemplateBinding Content}" />
                        <Grid Grid.Column="1"
                              Style="{DynamicResource TaskListScrollButtonGrid}"
                              Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <RepeatButton Command="ScrollBar.PageUpCommand"
                                          Style="{DynamicResource TaskListScrollUpButton}"
                                          Grid.Column="0">
                                <Path Fill="{DynamicResource TaskListScrollArrow}"
                                      Data="{DynamicResource VArrow}"
                                      RenderTransformOrigin="0.5,0.5"
                                      RenderOptions.EdgeMode="Aliased">
                                    <Path.RenderTransform>
                                        <ScaleTransform ScaleY="-1" />
                                    </Path.RenderTransform>
                                </Path>
                            </RepeatButton>
                            <RepeatButton Command="ScrollBar.PageDownCommand"
                                          Style="{DynamicResource TaskListScrollDownButton}"
                                          Grid.Row="1">
                                <Path Fill="{DynamicResource TaskListScrollArrow}"
                                      Data="{DynamicResource VArrow}"
                                      RenderOptions.EdgeMode="Aliased">
                                </Path>
                            </RepeatButton>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ScrollContentPresenter Grid.Row="0"
                                                            Width="{TemplateBinding Width}"
                                                            Height="{TemplateBinding Height}"
                                                            CanContentScroll="{TemplateBinding CanContentScroll}"
                                                            Content="{TemplateBinding Content}" />
                                    <Grid Grid.Row="1"
                                          Style="{DynamicResource TaskListScrollButtonGrid}"
                                          Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <RepeatButton Command="ScrollBar.PageUpCommand"
                                                      Style="{DynamicResource TaskListScrollUpButton}"
                                                      Padding="7"
                                                      Grid.Column="0">
                                            <Path Fill="{DynamicResource TaskListScrollArrow}"
                                                  Data="{DynamicResource VArrow}"
                                                  Margin="7"
                                                  RenderTransformOrigin="0.5,0.5"
                                                  RenderOptions.EdgeMode="Aliased">
                                                <Path.RenderTransform>
                                                    <ScaleTransform ScaleY="-1" />
                                                </Path.RenderTransform>
                                            </Path>
                                        </RepeatButton>
                                        <RepeatButton Command="ScrollBar.PageDownCommand"
                                                      Style="{DynamicResource TaskListScrollDownButton}"
                                                      Padding="4"
                                                      Grid.Column="1">
                                            <Path Fill="{DynamicResource TaskListScrollArrow}"
                                                  Data="{DynamicResource VArrow}"
                                                  Margin="7"
                                                  RenderOptions.EdgeMode="Aliased">
                                            </Path>
                                        </RepeatButton>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin"
                            Value="0,3,0,0" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Geometry x:Key="VArrow">M 4.5 6 L 9 1.5 L 8 0 L 4.5 3 L 1 0 L 0 1.5 Z</Geometry>
    <Geometry x:Key="HArrow">M 0,4.5 L 4.5,9 L 6,8 L 3,4.5 L 6,1 L 4.5,0 Z</Geometry>

    <Style TargetType="ToggleButton"
           x:Key="TrayToggleButton">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Margin"
                Value="-20,1,3,0" />
        <Setter Property="Width"
                Value="20" />
        <Setter Property="Height"
                Value="24" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="ButtonBorder">
                        <Border.Background>
                            <ImageBrush ImageSource="{DynamicResource TrayButton}"
                                        ViewboxUnits="RelativeToBoundingBox"
                                        Viewbox="0,0,0.15,1" />
                        </Border.Background>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{DynamicResource TrayButton}"
                                                ViewboxUnits="RelativeToBoundingBox"
                                                Viewbox="0.172,0,0.15,1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{DynamicResource TrayButton}"
                                                ViewboxUnits="RelativeToBoundingBox"
                                                Viewbox="0.5,0,0.15,1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{DynamicResource TrayButton}"
                                                ViewboxUnits="RelativeToBoundingBox"
                                                Viewbox="0.84,0,0.15,1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0,-19,0,1" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button"
           x:Key="NotifyBalloonCloseButton"
           BasedOn="{StaticResource NotifyBalloonCloseButton}">
        <Setter Property="Foreground"
                Value="{DynamicResource BalloonCloseButtonInactiveForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="{DynamicResource BalloonCloseButtonInactiveShadow}"
                            BorderThickness="0,0,1,1"
                            CornerRadius="3"
                            Name="BorderShadowDark">
                        <Border BorderBrush="{DynamicResource BalloonCloseButtonInactiveShadow}"
                                BorderThickness="1,1,0,0"
                                CornerRadius="3"
                                Name="BorderShadowLight">
                            <Border BorderBrush="{DynamicResource BalloonCloseButtonInactiveBorder}"
                                    BorderThickness="1"
                                    CornerRadius="2"
                                    Background="{DynamicResource BalloonCloseButtonInactiveBackground}"
                                    Name="Border">
                                <Border BorderBrush="{DynamicResource BalloonCloseButtonInactiveShadow}"
                                        BorderThickness="0,0,1,1"
                                        CornerRadius="2"
                                        Name="BorderInnerDark">
                                    <Border BorderBrush="{DynamicResource BalloonCloseButtonInactiveShadow}"
                                            BorderThickness="1"
                                            CornerRadius="2"
                                            Padding="3,3,0,0"
                                            Name="BorderInnerLight">
                                        <Grid x:Name="Content">
                                            <Path Stroke="{TemplateBinding Foreground}"
                                                  StrokeEndLineCap="Round"
                                                  StrokeStartLineCap="Round"
                                                  Width="8"
                                                  Height="8"
                                                  StrokeThickness="2"
                                                  Data="M 0,0 l 6,6" />
                                            <Path Stroke="{TemplateBinding Foreground}"
                                                  StrokeEndLineCap="Round"
                                                  StrokeStartLineCap="Round"
                                                  Width="8"
                                                  Height="8"
                                                  StrokeThickness="2"
                                                  Data="M 0,6 l 6,-6" />
                                        </Grid>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="BorderShadowDark"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonActiveShadowDark}" />
                            <Setter TargetName="BorderShadowLight"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonActiveShadowLight}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonActiveBorder}" />
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource BalloonCloseButtonHoverBackground}" />
                            <Setter TargetName="BorderInnerDark"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonHoverInnerDark}" />
                            <Setter TargetName="BorderInnerLight"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonHoverInnerLight}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource BalloonCloseButtonActiveForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="BorderShadowDark"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonActiveShadowDark}" />
                            <Setter TargetName="BorderShadowLight"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonActiveShadowLight}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonActiveBorder}" />
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource BalloonCloseButtonPressedBackground}" />
                            <Setter TargetName="BorderInnerDark"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonPressedInnerDark}" />
                            <Setter TargetName="BorderInnerLight"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonPressedInnerLight}" />
                            <Setter TargetName="BorderInnerDark"
                                    Property="BorderThickness"
                                    Value="1,1,0,0" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource BalloonCloseButtonActiveForeground}" />
                            <Setter TargetName="Content"
                                    Property="Opacity"
                                    Value="0.5" />
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="-1,-1,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	
	
</ResourceDictionary>
